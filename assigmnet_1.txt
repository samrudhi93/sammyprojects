# Understanding how to see duplicate elements in list
names = [1,2,2,2,1,3,4,5,5,5,6,7,7,5]
dup = []
def duplicate_check(lst):
    for i in range(len(lst)):
        for j in range(i+1,len(lst)):
            if lst[i] == lst[j] and \
            lst[i] not in dup:
                dup.append(lst[i])
    return (dup , len(dup))
x,y = duplicate_check(names)
print(f'Duplicate items lists is {x}')
print(f'Duplicate items lenght is {y}')


# Python List Methods
# Methods that are available with list object 

# Are accessed as list.method(). 
'''
append() - Add an element to the end of the list
extend() - Add all elements of a list to the another list
insert()- I nsert an item at the defined index
remove() - Removes an item from the list
pop() - Removes and returns an element at the given index
clear() - Removes all items from the list
index() - Returns the index of the first matched item
count() - Returns the count of number of items passed as an argument
sort() - Sort items in a list in ascending order
reverse() - Reverse the order of items in the list
copy() - Returns a shallow copy of the list
'''
'''
Built-in Functions with List
all()	Return True if all elements of the list are true 
        (or if the list is empty).
any()	Return True if any element of the list is true. 
        If the list is empty, return False.
enumerate()	Return an enumerate object. It contains the index 
            and value of all the items of list as a tuple.
len()	Return the length (the number of items) in the list.
list()	Convert an iterable (tuple, string, set, dictionary) to a list.
max()	Return the largest item in the list.
min()	Return the smallest item in the list
sorted()	Return a new sorted list (does not sort the list itself).
sum()	Return the sum of all elements in the list.
'''
rakeshtrainer@gmail.com
